class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }

  addProduct(productId, name, price, quantity) {
    let product = {productId:productId, name:name, price:price, quantity:quantity};
    this.products.push(product);
  }
  
  getProduct(productId) {
    for (var i=0; i<this.products.length; i++) {
      let product = this.products[i];
      if (product.productId = productId){
        return product;
      }
    
    }
  }
  
  removeProduct(productId) {
    let product = this.getProduct(productId);
    let theIndex = this.products.indexOf(product);
    this.products.splice(theIndex, 1);
  }
  
  updateProduct( productId, name, price) {
   let product = this.getProduct(productId);
   let theIndex = this.products.indexOf(product);
   this.products[theIndex] = {productId:productId, name:name, price:price}
  }
  
  addCustomer(customerId, name, email, address ) {
    let customer = {customerId:customerId, name:name, email:email, address:address};
    this.customers.push(customer);
  }
  
  getCustomer(customerId) {
    for (var i=0; i<this.customers.length; i++) {
      let customer = this.customers[i];
      if (customer.customerId = customerId){
        return customer;
      }
    }
  }
  
  removeCustomer(customerId) {
    let customer = this.getCustomer(customerId);
    let theIndex = this.customers.indexOf(customer);
    this.customers.splice(theIndex, 1);
  }
  
  updateCustomer(customerId, name, email, address) {
   let customer = this.getCustomer(customerId);
   let theIndex = this.customers.indexOf(customer);
   this.customers[theIndex] = {customerId:customerId, name:name, email:email, address:address};
  }
  
  addToCart(cartId, product, orderQuantity, customerId) {
    let cart = {cartId:cartId, product:product, orderQuantity:orderQuantity, customerId:customerId};
    this.carts.push(cart);
  }
  
  removeFromCart(productId) {
    let cart = this.getProduct(productId);
    let theIndex = this.products.indexOf(cart);
    this.products.splice(theIndex, 0);
  }
  
  createOrder(orderId, cartId) {
     let order = {orderId:orderId, cartId:cartId};
     this.orders.push(order);

  }
  
  getOrder(orderId) {
    for (var i=0; i<this.orders.length; i++) {
      let order = this.orders[i];
      if (order.orderId = orderId){
        return order;
      }
    }
  }
  
  cancelOrder(orderId) {
    let order = this.getOrder(orderId);
    let theIndex = this.orders.indexOf(order);
    this.orders.splice(theIndex, 1);
  }
  
//   calculateOrderCost(orderId) {
//     let order = 
//   }
      
    
  
  
  
 
}

let mumMboga = new MumMboga();
mumMboga.addProduct(1, 'Oranges', 'KSH 30', 5);
mumMboga.addProduct(2, 'Bananas', 'KSH 40', 10);
mumMboga.addProduct(3, 'Potatoes', 'KSH 100', '1 sack');
console.log(mumMboga.getProduct(1));
console.log(mumMboga.products);

mumMboga.removeProduct(1);
console.log(mumMboga.products);

mumMboga.updateProduct(4, "Carrots", 'KSH 50');
console.log(mumMboga.updateProduct(4));
console.log(mumMboga.products);

mumMboga.addCustomer(101, 'Casper', 'casperwaititu@gmail.com', 'P.O BOX 356');
mumMboga.addCustomer(102, 'Forest', 'forestmwavita@gmail.com', 'P.O BOX 489');
console.log(mumMboga.customers);
console.log(mumMboga.getCustomer(101));

mumMboga.removeCustomer(101);
console.log(mumMboga.customers);

mumMboga.updateCustomer(103, "Jackline", 'jacklineawino@gmail.com', 'P.O BOX 700');
console.log(mumMboga.updateCustomer(103));
console.log(mumMboga.customers);

mumMboga.addToCart(1901, 'Tomatoes', '40 sacks', 101);
mumMboga.addToCart(1902, 'Green Bell Peppers', '2 kg', 102);
console.log(mumMboga.addToCart(101));
console.log(mumMboga.carts);

mumMboga.removeFromCart(1);
console.log(mumMboga.carts);

mumMboga.createOrder(200, 1902);
mumMboga.createOrder(201, 1902);
mumMboga.createOrder(202, 1902);
console.log(mumMboga.createOrder(1902));
console.log(mumMboga.getOrder(200));
console.log(mumMboga.orders);

mumMboga.cancelOrder(200, 201);
console.log(mumMboga.orders);


































